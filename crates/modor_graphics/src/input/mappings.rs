use modor_input::{GamepadButton, Key, MouseButton};
use winit::event;
use winit::keyboard::KeyCode;

// coverage: off (not necessary to test all match branches)

pub(crate) fn to_mouse_button(button: event::MouseButton) -> MouseButton {
    match button {
        event::MouseButton::Left => MouseButton::Left,
        event::MouseButton::Right => MouseButton::Right,
        event::MouseButton::Middle => MouseButton::Middle,
        event::MouseButton::Back => MouseButton::Back,
        event::MouseButton::Forward => MouseButton::Forward,
        event::MouseButton::Other(id) => MouseButton::Other(id),
    }
}

#[allow(clippy::too_many_lines)]
pub(crate) fn to_keyboard_key(code: KeyCode) -> Option<Key> {
    // match code {
    //     KeyCode::Key1 => Some(Key::Key1),
    //     KeyCode::Key2 => Some(Key::Key2),
    //     KeyCode::Key3 => Some(Key::Key3),
    //     KeyCode::Key4 => Some(Key::Key4),
    //     KeyCode::Key5 => Some(Key::Key5),
    //     KeyCode::Key6 => Some(Key::Key6),
    //     KeyCode::Key7 => Some(Key::Key7),
    //     KeyCode::Key8 => Some(Key::Key8),
    //     KeyCode::Key9 => Some(Key::Key9),
    //     KeyCode::Key0 => Some(Key::Key0),
    //     KeyCode::A => Some(Key::A),
    //     KeyCode::B => Some(Key::B),
    //     KeyCode::C => Some(Key::C),
    //     KeyCode::D => Some(Key::D),
    //     KeyCode::E => Some(Key::E),
    //     KeyCode::F => Some(Key::F),
    //     KeyCode::G => Some(Key::G),
    //     KeyCode::H => Some(Key::H),
    //     KeyCode::I => Some(Key::I),
    //     KeyCode::J => Some(Key::J),
    //     KeyCode::K => Some(Key::K),
    //     KeyCode::L => Some(Key::L),
    //     KeyCode::M => Some(Key::M),
    //     KeyCode::N => Some(Key::N),
    //     KeyCode::O => Some(Key::O),
    //     KeyCode::P => Some(Key::P),
    //     KeyCode::Q => Some(Key::Q),
    //     KeyCode::R => Some(Key::R),
    //     KeyCode::S => Some(Key::S),
    //     KeyCode::T => Some(Key::T),
    //     KeyCode::U => Some(Key::U),
    //     KeyCode::V => Some(Key::V),
    //     KeyCode::W => Some(Key::W),
    //     KeyCode::X => Some(Key::X),
    //     KeyCode::Y => Some(Key::Y),
    //     KeyCode::Z => Some(Key::Z),
    //     KeyCode::Escape => Some(Key::Escape),
    //     KeyCode::F1 => Some(Key::F1),
    //     KeyCode::F2 => Some(Key::F2),
    //     KeyCode::F3 => Some(Key::F3),
    //     KeyCode::F4 => Some(Key::F4),
    //     KeyCode::F5 => Some(Key::F5),
    //     KeyCode::F6 => Some(Key::F6),
    //     KeyCode::F7 => Some(Key::F7),
    //     KeyCode::F8 => Some(Key::F8),
    //     KeyCode::F9 => Some(Key::F9),
    //     KeyCode::F10 => Some(Key::F10),
    //     KeyCode::F11 => Some(Key::F11),
    //     KeyCode::F12 => Some(Key::F12),
    //     KeyCode::F13 => Some(Key::F13),
    //     KeyCode::F14 => Some(Key::F14),
    //     KeyCode::F15 => Some(Key::F15),
    //     KeyCode::F16 => Some(Key::F16),
    //     KeyCode::F17 => Some(Key::F17),
    //     KeyCode::F18 => Some(Key::F18),
    //     KeyCode::F19 => Some(Key::F19),
    //     KeyCode::F20 => Some(Key::F20),
    //     KeyCode::F21 => Some(Key::F21),
    //     KeyCode::F22 => Some(Key::F22),
    //     KeyCode::F23 => Some(Key::F23),
    //     KeyCode::F24 => Some(Key::F24),
    //     KeyCode::Snapshot => Some(Key::Snapshot),
    //     KeyCode::Scroll => Some(Key::Scroll),
    //     KeyCode::Pause => Some(Key::Pause),
    //     KeyCode::Insert => Some(Key::Insert),
    //     KeyCode::Home => Some(Key::Home),
    //     KeyCode::Delete => Some(Key::Delete),
    //     KeyCode::End => Some(Key::End),
    //     KeyCode::PageDown => Some(Key::PageDown),
    //     KeyCode::PageUp => Some(Key::PageUp),
    //     KeyCode::Left => Some(Key::Left),
    //     KeyCode::Up => Some(Key::Up),
    //     KeyCode::Right => Some(Key::Right),
    //     KeyCode::Down => Some(Key::Down),
    //     KeyCode::Back => Some(Key::Back),
    //     KeyCode::Return => Some(Key::Return),
    //     KeyCode::Space => Some(Key::Space),
    //     KeyCode::Compose => Some(Key::Compose),
    //     KeyCode::Caret => Some(Key::Caret),
    //     KeyCode::Numlock => Some(Key::Numlock),
    //     KeyCode::Numpad0 => Some(Key::Numpad0),
    //     KeyCode::Numpad1 => Some(Key::Numpad1),
    //     KeyCode::Numpad2 => Some(Key::Numpad2),
    //     KeyCode::Numpad3 => Some(Key::Numpad3),
    //     KeyCode::Numpad4 => Some(Key::Numpad4),
    //     KeyCode::Numpad5 => Some(Key::Numpad5),
    //     KeyCode::Numpad6 => Some(Key::Numpad6),
    //     KeyCode::Numpad7 => Some(Key::Numpad7),
    //     KeyCode::Numpad8 => Some(Key::Numpad8),
    //     KeyCode::Numpad9 => Some(Key::Numpad9),
    //     KeyCode::NumpadAdd => Some(Key::NumpadAdd),
    //     KeyCode::NumpadDivide => Some(Key::NumpadDivide),
    //     KeyCode::NumpadDecimal => Some(Key::NumpadDecimal),
    //     KeyCode::NumpadComma => Some(Key::NumpadComma),
    //     KeyCode::NumpadEnter => Some(Key::NumpadEnter),
    //     KeyCode::NumpadEquals => Some(Key::NumpadEquals),
    //     KeyCode::NumpadMultiply => Some(Key::NumpadMultiply),
    //     KeyCode::NumpadSubtract => Some(Key::NumpadSubtract),
    //     KeyCode::AbntC1 => Some(Key::AbntC1),
    //     KeyCode::AbntC2 => Some(Key::AbntC2),
    //     KeyCode::Apostrophe => Some(Key::Apostrophe),
    //     KeyCode::Apps => Some(Key::Apps),
    //     KeyCode::Asterisk => Some(Key::Asterisk),
    //     KeyCode::At => Some(Key::At),
    //     KeyCode::Ax => Some(Key::Ax),
    //     KeyCode::Backslash => Some(Key::Backslash),
    //     KeyCode::Calculator => Some(Key::Calculator),
    //     KeyCode::Capital => Some(Key::Capital),
    //     KeyCode::Colon => Some(Key::Colon),
    //     KeyCode::Comma => Some(Key::Comma),
    //     KeyCode::Convert => Some(Key::Convert),
    //     KeyCode::Equals => Some(Key::Equals),
    //     KeyCode::Grave => Some(Key::Grave),
    //     KeyCode::Kana => Some(Key::Kana),
    //     KeyCode::Kanji => Some(Key::Kanji),
    //     KeyCode::LAlt => Some(Key::LAlt),
    //     KeyCode::LBracket => Some(Key::LBracket),
    //     KeyCode::LControl => Some(Key::LControl),
    //     KeyCode::LShift => Some(Key::LShift),
    //     KeyCode::LWin => Some(Key::LWin),
    //     KeyCode::Mail => Some(Key::Mail),
    //     KeyCode::MediaSelect => Some(Key::MediaSelect),
    //     KeyCode::MediaStop => Some(Key::MediaStop),
    //     KeyCode::Minus => Some(Key::Minus),
    //     KeyCode::Mute => Some(Key::Mute),
    //     KeyCode::MyComputer => Some(Key::MyComputer),
    //     KeyCode::NavigateForward => Some(Key::NavigateForward),
    //     KeyCode::NavigateBackward => Some(Key::NavigateBackward),
    //     KeyCode::NextTrack => Some(Key::NextTrack),
    //     KeyCode::NoConvert => Some(Key::NoConvert),
    //     KeyCode::OEM102 => Some(Key::OEM102),
    //     KeyCode::Period => Some(Key::Period),
    //     KeyCode::PlayPause => Some(Key::PlayPause),
    //     KeyCode::Plus => Some(Key::Plus),
    //     KeyCode::Power => Some(Key::Power),
    //     KeyCode::PrevTrack => Some(Key::PrevTrack),
    //     KeyCode::RAlt => Some(Key::RAlt),
    //     KeyCode::RBracket => Some(Key::RBracket),
    //     KeyCode::RControl => Some(Key::RControl),
    //     KeyCode::RShift => Some(Key::RShift),
    //     KeyCode::RWin => Some(Key::RWin),
    //     KeyCode::Semicolon => Some(Key::Semicolon),
    //     KeyCode::Slash => Some(Key::Slash),
    //     KeyCode::Sleep => Some(Key::Sleep),
    //     KeyCode::Stop => Some(Key::Stop),
    //     KeyCode::Sysrq => Some(Key::Sysrq),
    //     KeyCode::Tab => Some(Key::Tab),
    //     KeyCode::Underline => Some(Key::Underline),
    //     KeyCode::Unlabeled => Some(Key::Unlabeled),
    //     KeyCode::VolumeDown => Some(Key::VolumeDown),
    //     KeyCode::VolumeUp => Some(Key::VolumeUp),
    //     KeyCode::Wake => Some(Key::Wake),
    //     KeyCode::WebBack => Some(Key::WebBack),
    //     KeyCode::WebFavorites => Some(Key::WebFavorites),
    //     KeyCode::WebForward => Some(Key::WebForward),
    //     KeyCode::WebHome => Some(Key::WebHome),
    //     KeyCode::WebRefresh => Some(Key::WebRefresh),
    //     KeyCode::WebSearch => Some(Key::WebSearch),
    //     KeyCode::WebStop => Some(Key::WebStop),
    //     KeyCode::Yen => Some(Key::Yen),
    //     KeyCode::Copy => Some(Key::Copy),
    //     KeyCode::Paste => Some(Key::Paste),
    //     KeyCode::Cut => Some(Key::Cut),
    // }
    // TODO: use logical keys
    None
}

pub(crate) fn to_gamepad_button(button: gilrs::Button) -> Option<GamepadButton> {
    match button {
        gilrs::Button::South => Some(GamepadButton::South),
        gilrs::Button::East => Some(GamepadButton::East),
        gilrs::Button::North => Some(GamepadButton::North),
        gilrs::Button::West => Some(GamepadButton::West),
        gilrs::Button::C => Some(GamepadButton::C),
        gilrs::Button::Z => Some(GamepadButton::Z),
        gilrs::Button::LeftTrigger => Some(GamepadButton::FrontLeftTrigger),
        gilrs::Button::LeftTrigger2 => Some(GamepadButton::BackLeftTrigger),
        gilrs::Button::RightTrigger => Some(GamepadButton::FrontRightTrigger),
        gilrs::Button::RightTrigger2 => Some(GamepadButton::BackRightTrigger),
        gilrs::Button::Select => Some(GamepadButton::Select),
        gilrs::Button::Start => Some(GamepadButton::Start),
        gilrs::Button::Mode => Some(GamepadButton::Mode),
        gilrs::Button::LeftThumb => Some(GamepadButton::LeftStick),
        gilrs::Button::RightThumb => Some(GamepadButton::RightStick),
        gilrs::Button::DPadUp => Some(GamepadButton::DPadUp),
        gilrs::Button::DPadDown => Some(GamepadButton::DPadDown),
        gilrs::Button::DPadLeft => Some(GamepadButton::DPadLeft),
        gilrs::Button::DPadRight => Some(GamepadButton::DPadRight),
        gilrs::Button::Unknown => None,
    }
}
